version: 2.1
orbs:
  browser-tools: circleci/browser-tools@1.3.0
jobs:
  build:
    parallelism: 1
    working_directory: ~/openownership/register-v2

    docker:

      - image: cimg/ruby:3.1.2-browsers
        environment:
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          RAILS_ENV: test

      - image: mongo:4.4.1

      - image: docker.elastic.co/elasticsearch/elasticsearch:7.17.5
        environment:
          - 'discovery.type=single-node'
          - 'cluster.name=register-v2-elasticsearch'
          - 'bootstrap.memory_lock=true'
          - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'

      - image: circleci/redis:4.0.9-alpine

    steps:

      - checkout
      
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver

      # Which version of bundler?
      - run:
          name: Which bundler?
          command: bundle -v

      # Restore bundle cache
      - restore_cache:
          keys:
            - app-bundle-v3-{{ checksum "Gemfile.lock" }}

      - run:
          name: Bundle install
          command: bundle check || bundle install

      # Store bundle cache
      - save_cache:
          key: app-bundle-v3-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      # Restore yarn cache
      - restore_cache:
          keys:
            - app-yarn-v2-{{ checksum "yarn.lock" }}

      - run:
          name: Yarn Install
          command: yarn install --cache-folder ~/.cache/yarn

      # Store yarn / webpacker cache
      - save_cache:
          key: app-yarn-v2-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

      - run:
          name: Wait for MongoDB
          command: dockerize -wait tcp://localhost:27017 -timeout 1m

      - run:
          name: Wait for ElasticSearch
          command: dockerize -wait tcp://localhost:9200 -timeout 1m

      - run:
          name: Wait for Redis
          command: dockerize -wait tcp://localhost:6379 -timeout 1m

      - run:
          command: bin/test
          environment:
            RAILS_ENV: test
            RACK_ENV: test
